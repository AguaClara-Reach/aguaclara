name: Build

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  test-python:
    runs-on: ${{ matrix.os }}

    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10", 3.11, 3.12]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }} for Linux
      if: runner.os != 'Windows'
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Conda for Windows with Python ${{ matrix.python-version }}
      if: runner.os == 'Windows'
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        channels: conda-forge

    - name: Install dependencies for Linux
      if: runner.os != 'Windows'
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install pipenv
        pipenv install --dev --python ${{ matrix.python-version }}

    - name: Install dependencies for Windows
      if: runner.os == 'Windows'
      run: |
        conda run python -m pip install --upgrade pip setuptools wheel
        conda run python -m pip install pipenv
        pipenv --python=$(conda run which python) --site-packages
        pipenv install --dev
        
    - name: Run pytests and generate coverage report
      run: |
        pipenv run pytest --cov=./ --cov-report=xml
        pipenv run codecov -t ${{ secrets.CODECOV_TOKEN }}
  
  test-docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install pipenv
        pipenv install --dev --python 3.10
        
    - name: Run doctests and build html files
      run: |
        cd docs
        pipenv run make doctest
        pipenv run make html

    - name: Run html-proofer
      uses: chabad360/htmlproofer@master
      with:
        directory: docs/build/html
        arguments: --allow_hash_href --ignore-files "docs/build/html/search.html"

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python 3.10
      uses: actions/setup-python@v1
      with:
        python-version: "3.10"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install pipenv
        pipenv install --dev --python 3.10

    - name: Lint with flake8
      run: |
        flake8 aguaclara --count --verbose --show-source --statistics

    - name: Check with black
      run: |
        black --check aguaclara
